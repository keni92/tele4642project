#!/usr/bin/python

from mininet.topo import Topo
from mininet.net import Mininet
from mininet.node import CPULimitedHost
from mininet.link import TCLink
from mininet.util import irange,dumpNodeConnections
from mininet.log import setLogLevel

class CustomTopo(Topo):
    "Simple Data Center Topology"

    "linkopts - (1:core, 2:host) parameters"
    "fanout - number of child switch per parent switch"
        def __init__(self, linkopts1, linkopts2, fanswitch, fanout, **opts):
        # Initialize topology and default options
        Topo.__init__(self, **opts)
        linkopts1 = dict(bw=50, delay='5ms', loss=0)  
        linkopts2 = dict(bw=30, delay='10ms', loss=0)
        #"bw is Bandwidth of the links"
        #"delay is the time between sending packets"
        #"loss is percentage that packets are dropped"
        
        m = 1        
        n = 1
        o = 2
        for i in irange(1, fanswitch):
           coreSwitch = self.addSwitch('c%s' % i)
           for j in irange(1, fanout):
              host = self.addHost('h%s' % m)
              self.addLink(coreSwitch, host, **linkopts2)
              m += 1
        
        #Ring topology
        for k in irange(1, fanswitch):
           if k == fanswitch:
              self.addLink('c1', 'c%s' % n, **linkopts1)
           else:
              self.addLink('c%s' % n, 'c%s' % n+1, **linkopts1)
           n += 1

        '''
        #All switches connected to each other
        for k in irange(1, fanswitch):
           for l in irange(1, fanswitch):
              addLink('c%s' % n, 'c%s' % o, **linkopts1)
              o += 1
           n += 1
        '''
          
topos = { 'custom': ( lambda: CustomTopo() ) }


def simpleTest():
   "Create and test a simple network"

   topo = CustomTopo(1,1,3,2)


   net = Mininet(topo=topo, host=CPULimitedHost, link=TCLink)
   net.start()
   print "Dumping host connections"
   dumpNodeConnections(net.hosts)
   print "Testing network connectivity"
   net.pingAll()
   net.stop()
   
if __name__ == '__main__':
   # Tell mininet to print useful information
   setLogLevel('info')
   simpleTest()
